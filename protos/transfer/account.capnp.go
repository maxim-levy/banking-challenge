// Code generated by capnpc-go. DO NOT EDIT.

package transfer

import (
	context "golang.org/x/net/context"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type TransferFactory struct{ Client capnp.Client }

// TransferFactory_TypeID is the unique identifier for the type TransferFactory.
const TransferFactory_TypeID = 0xc93b78b26d6cd25a

func (c TransferFactory) TransferFunds(ctx context.Context, params func(TransferFactory_transferFunds_Params) error, opts ...capnp.CallOption) TransferFactory_transferFunds_Results_Promise {
	if c.Client == nil {
		return TransferFactory_transferFunds_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xc93b78b26d6cd25a,
			MethodID:      0,
			InterfaceName: "protos/transfer/account.capnp:TransferFactory",
			MethodName:    "transferFunds",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(TransferFactory_transferFunds_Params{Struct: s}) }
	}
	return TransferFactory_transferFunds_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type TransferFactory_Server interface {
	TransferFunds(TransferFactory_transferFunds) error
}

func TransferFactory_ServerToClient(s TransferFactory_Server) TransferFactory {
	c, _ := s.(server.Closer)
	return TransferFactory{Client: server.New(TransferFactory_Methods(nil, s), c)}
}

func TransferFactory_Methods(methods []server.Method, s TransferFactory_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc93b78b26d6cd25a,
			MethodID:      0,
			InterfaceName: "protos/transfer/account.capnp:TransferFactory",
			MethodName:    "transferFunds",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := TransferFactory_transferFunds{c, opts, TransferFactory_transferFunds_Params{Struct: p}, TransferFactory_transferFunds_Results{Struct: r}}
			return s.TransferFunds(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// TransferFactory_transferFunds holds the arguments for a server call to TransferFactory.transferFunds.
type TransferFactory_transferFunds struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  TransferFactory_transferFunds_Params
	Results TransferFactory_transferFunds_Results
}

type TransferFactory_transferFunds_Params struct{ capnp.Struct }

// TransferFactory_transferFunds_Params_TypeID is the unique identifier for the type TransferFactory_transferFunds_Params.
const TransferFactory_transferFunds_Params_TypeID = 0xe15103a27a4a442f

func NewTransferFactory_transferFunds_Params(s *capnp.Segment) (TransferFactory_transferFunds_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return TransferFactory_transferFunds_Params{st}, err
}

func NewRootTransferFactory_transferFunds_Params(s *capnp.Segment) (TransferFactory_transferFunds_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return TransferFactory_transferFunds_Params{st}, err
}

func ReadRootTransferFactory_transferFunds_Params(msg *capnp.Message) (TransferFactory_transferFunds_Params, error) {
	root, err := msg.RootPtr()
	return TransferFactory_transferFunds_Params{root.Struct()}, err
}

func (s TransferFactory_transferFunds_Params) String() string {
	str, _ := text.Marshal(0xe15103a27a4a442f, s.Struct)
	return str
}

func (s TransferFactory_transferFunds_Params) SourceAccount() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s TransferFactory_transferFunds_Params) HasSourceAccount() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s TransferFactory_transferFunds_Params) SourceAccountBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s TransferFactory_transferFunds_Params) SetSourceAccount(v string) error {
	return s.Struct.SetText(0, v)
}

func (s TransferFactory_transferFunds_Params) DestinationAccount() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s TransferFactory_transferFunds_Params) HasDestinationAccount() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s TransferFactory_transferFunds_Params) DestinationAccountBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s TransferFactory_transferFunds_Params) SetDestinationAccount(v string) error {
	return s.Struct.SetText(1, v)
}

func (s TransferFactory_transferFunds_Params) Amount() uint64 {
	return s.Struct.Uint64(0)
}

func (s TransferFactory_transferFunds_Params) SetAmount(v uint64) {
	s.Struct.SetUint64(0, v)
}

// TransferFactory_transferFunds_Params_List is a list of TransferFactory_transferFunds_Params.
type TransferFactory_transferFunds_Params_List struct{ capnp.List }

// NewTransferFactory_transferFunds_Params creates a new list of TransferFactory_transferFunds_Params.
func NewTransferFactory_transferFunds_Params_List(s *capnp.Segment, sz int32) (TransferFactory_transferFunds_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return TransferFactory_transferFunds_Params_List{l}, err
}

func (s TransferFactory_transferFunds_Params_List) At(i int) TransferFactory_transferFunds_Params {
	return TransferFactory_transferFunds_Params{s.List.Struct(i)}
}

func (s TransferFactory_transferFunds_Params_List) Set(i int, v TransferFactory_transferFunds_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s TransferFactory_transferFunds_Params_List) String() string {
	str, _ := text.MarshalList(0xe15103a27a4a442f, s.List)
	return str
}

// TransferFactory_transferFunds_Params_Promise is a wrapper for a TransferFactory_transferFunds_Params promised by a client call.
type TransferFactory_transferFunds_Params_Promise struct{ *capnp.Pipeline }

func (p TransferFactory_transferFunds_Params_Promise) Struct() (TransferFactory_transferFunds_Params, error) {
	s, err := p.Pipeline.Struct()
	return TransferFactory_transferFunds_Params{s}, err
}

type TransferFactory_transferFunds_Results struct{ capnp.Struct }

// TransferFactory_transferFunds_Results_TypeID is the unique identifier for the type TransferFactory_transferFunds_Results.
const TransferFactory_transferFunds_Results_TypeID = 0xf4cbce0b0580cbf6

func NewTransferFactory_transferFunds_Results(s *capnp.Segment) (TransferFactory_transferFunds_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return TransferFactory_transferFunds_Results{st}, err
}

func NewRootTransferFactory_transferFunds_Results(s *capnp.Segment) (TransferFactory_transferFunds_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return TransferFactory_transferFunds_Results{st}, err
}

func ReadRootTransferFactory_transferFunds_Results(msg *capnp.Message) (TransferFactory_transferFunds_Results, error) {
	root, err := msg.RootPtr()
	return TransferFactory_transferFunds_Results{root.Struct()}, err
}

func (s TransferFactory_transferFunds_Results) String() string {
	str, _ := text.Marshal(0xf4cbce0b0580cbf6, s.Struct)
	return str
}

func (s TransferFactory_transferFunds_Results) Account() (Account, error) {
	p, err := s.Struct.Ptr(0)
	return Account{Struct: p.Struct()}, err
}

func (s TransferFactory_transferFunds_Results) HasAccount() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s TransferFactory_transferFunds_Results) SetAccount(v Account) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAccount sets the account field to a newly
// allocated Account struct, preferring placement in s's segment.
func (s TransferFactory_transferFunds_Results) NewAccount() (Account, error) {
	ss, err := NewAccount(s.Struct.Segment())
	if err != nil {
		return Account{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// TransferFactory_transferFunds_Results_List is a list of TransferFactory_transferFunds_Results.
type TransferFactory_transferFunds_Results_List struct{ capnp.List }

// NewTransferFactory_transferFunds_Results creates a new list of TransferFactory_transferFunds_Results.
func NewTransferFactory_transferFunds_Results_List(s *capnp.Segment, sz int32) (TransferFactory_transferFunds_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return TransferFactory_transferFunds_Results_List{l}, err
}

func (s TransferFactory_transferFunds_Results_List) At(i int) TransferFactory_transferFunds_Results {
	return TransferFactory_transferFunds_Results{s.List.Struct(i)}
}

func (s TransferFactory_transferFunds_Results_List) Set(i int, v TransferFactory_transferFunds_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s TransferFactory_transferFunds_Results_List) String() string {
	str, _ := text.MarshalList(0xf4cbce0b0580cbf6, s.List)
	return str
}

// TransferFactory_transferFunds_Results_Promise is a wrapper for a TransferFactory_transferFunds_Results promised by a client call.
type TransferFactory_transferFunds_Results_Promise struct{ *capnp.Pipeline }

func (p TransferFactory_transferFunds_Results_Promise) Struct() (TransferFactory_transferFunds_Results, error) {
	s, err := p.Pipeline.Struct()
	return TransferFactory_transferFunds_Results{s}, err
}

func (p TransferFactory_transferFunds_Results_Promise) Account() Account_Promise {
	return Account_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Account struct{ capnp.Struct }

// Account_TypeID is the unique identifier for the type Account.
const Account_TypeID = 0xc44234756a55b499

func NewAccount(s *capnp.Segment) (Account, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Account{st}, err
}

func NewRootAccount(s *capnp.Segment) (Account, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Account{st}, err
}

func ReadRootAccount(msg *capnp.Message) (Account, error) {
	root, err := msg.RootPtr()
	return Account{root.Struct()}, err
}

func (s Account) String() string {
	str, _ := text.Marshal(0xc44234756a55b499, s.Struct)
	return str
}

func (s Account) AccountNumber() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Account) HasAccountNumber() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Account) AccountNumberBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Account) SetAccountNumber(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Account) Balance() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s Account) SetBalance(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

// Account_List is a list of Account.
type Account_List struct{ capnp.List }

// NewAccount creates a new list of Account.
func NewAccount_List(s *capnp.Segment, sz int32) (Account_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Account_List{l}, err
}

func (s Account_List) At(i int) Account { return Account{s.List.Struct(i)} }

func (s Account_List) Set(i int, v Account) error { return s.List.SetStruct(i, v.Struct) }

func (s Account_List) String() string {
	str, _ := text.MarshalList(0xc44234756a55b499, s.List)
	return str
}

// Account_Promise is a wrapper for a Account promised by a client call.
type Account_Promise struct{ *capnp.Pipeline }

func (p Account_Promise) Struct() (Account, error) {
	s, err := p.Pipeline.Struct()
	return Account{s}, err
}

const schema_8e7192767ff40215 = "x\xda\xa4\x92\xbfk\x14A\x1c\xc5\xdf\x9b\xd9\xf5\x12<" +
	"\xe1\x96=\x1b\x8b\x9c\x88\x85\x82\xde\x11\x93Bb\x91\\" +
	"\x88\x11\x05eG\x92\"b\xe1d\xb3B\xe4n\xf7\x9c" +
	"\xdd\xf5Ws\xfe\x05\x16\x82\x85\x96\xf6\"\x88\xfe\x07\x8a" +
	"\x84\x80\x85\x9d\xa5\xa5e \xd8\x8e\xccz?,\x04\x0b" +
	"\xbb\xef\xcc\xbcy\x9f\xef\xfb\xce4~\xac\x88y\xff\xb3" +
	"\x00\xd4I\xff\x88}\xf9~\xf3^\xb9\xb8\xfa\x11j\x8e" +
	"\xb4\xc7\xc5\xe1\xf0\xc1\xf3\xfb\xcf\xe0\xb3\x06,\\\xe5\x05" +
	"\x86[\xae\x0c7\xf9\x10\xb4\xb7\xbe\xf6\xfa\xef\x1e]\xda" +
	"C0'\xa7bp\xe1\x03\x0d\xc3\xbdJ\xf9\x89W\xc2" +
	"\x03W\xd9\xce\xda\xb5'\xaf\xa5\xfa\x0e\xd5&\x01_8" +
	"\xcfo<!\xc0\xf0\x80oA\xfbs\xff\xa9\x7f\xf4\xcb" +
	"\xfe!\x82\xb6\x13T\xd0\x17\xe2\x94\x13\xbc\x11\xcb8o" +
	"\x07&+\xb2\xbcSH\xa3\xd3\xfcnb::\x8e\xb3" +
	"2-\xda\xb1\x1e\xa4\x83\xa5n\xdc\xaa\x96\x11\xa9f\xa4" +
	"\x07x\x04\x82\xb3\x06Pg$\xd5\xa2 \xd9t\xec`" +
	"~\x15P\xe7$\xd5EA;2\xb9\x81V\xd9\xdfN" +
	"\x0c\xeb\x10\xac\x83\xc3m\xdd\xd3i\x9c\xd0\x87\xa0\x0fN" +
	"\xe8\xde\xdf\xe9\x1b\xa3\xedu\xdd\x8a\x8b\xcc<v]x" +
	"\xd2\xff#9\xc7\x01\x83\xc0@\x04\xb35[\x8c\xee\xa0" +
	"\xb5^\xa6;\xf9\x0a#N9\xb5\x7fq*L{\xec" +
	"Q9\x9c\x8e\xb4\xd1\xb2\x9f\xab\xfa$\xffe\x97\x7fM" +
	"RE\x82\xc1x\x00\xd7_\x01*\x92T\xb7\x05)\x9a" +
	"\x14@\xb0\xb5\x04\xa8\x0dIuG\xd0\xe6Yi\xe2\xa4" +
	"\x1b\xe3\xf7H\xc7C\xb1;I^\xec\xa6\xba\xe0n\x96" +
	"v]_rz\xb8\xac\xfb\x95v\x16\x82\xb3\xf8\xcf " +
	"7\x93\xbc\xac\xf5\x8a\\y\x93$\xc7\xdc\xab\xcdH\xaa" +
	"\xa6\xe0p\xe4\xc5\xc6\xf4\xd3\x82l\x80\xbf\x02\x00\x00\xff" +
	"\xff\x09\x0e\xc8k"

func init() {
	schemas.Register(schema_8e7192767ff40215,
		0xc44234756a55b499,
		0xc93b78b26d6cd25a,
		0xe15103a27a4a442f,
		0xf4cbce0b0580cbf6)
}
