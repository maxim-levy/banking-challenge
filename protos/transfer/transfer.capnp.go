// Code generated by capnpc-go. DO NOT EDIT.

package transfer

import (
	context "golang.org/x/net/context"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type TransferFactory struct{ Client capnp.Client }

// TransferFactory_TypeID is the unique identifier for the type TransferFactory.
const TransferFactory_TypeID = 0xc93b78b26d6cd25a

func (c TransferFactory) TransferFunds(ctx context.Context, params func(TransferFactory_transferFunds_Params) error, opts ...capnp.CallOption) TransferFactory_transferFunds_Results_Promise {
	if c.Client == nil {
		return TransferFactory_transferFunds_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xc93b78b26d6cd25a,
			MethodID:      0,
			InterfaceName: "protos/transfer/transfer.capnp:TransferFactory",
			MethodName:    "transferFunds",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(TransferFactory_transferFunds_Params{Struct: s}) }
	}
	return TransferFactory_transferFunds_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type TransferFactory_Server interface {
	TransferFunds(TransferFactory_transferFunds) error
}

func TransferFactory_ServerToClient(s TransferFactory_Server) TransferFactory {
	c, _ := s.(server.Closer)
	return TransferFactory{Client: server.New(TransferFactory_Methods(nil, s), c)}
}

func TransferFactory_Methods(methods []server.Method, s TransferFactory_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc93b78b26d6cd25a,
			MethodID:      0,
			InterfaceName: "protos/transfer/transfer.capnp:TransferFactory",
			MethodName:    "transferFunds",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := TransferFactory_transferFunds{c, opts, TransferFactory_transferFunds_Params{Struct: p}, TransferFactory_transferFunds_Results{Struct: r}}
			return s.TransferFunds(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// TransferFactory_transferFunds holds the arguments for a server call to TransferFactory.transferFunds.
type TransferFactory_transferFunds struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  TransferFactory_transferFunds_Params
	Results TransferFactory_transferFunds_Results
}

type TransferFactory_transferFunds_Params struct{ capnp.Struct }

// TransferFactory_transferFunds_Params_TypeID is the unique identifier for the type TransferFactory_transferFunds_Params.
const TransferFactory_transferFunds_Params_TypeID = 0xe15103a27a4a442f

func NewTransferFactory_transferFunds_Params(s *capnp.Segment) (TransferFactory_transferFunds_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return TransferFactory_transferFunds_Params{st}, err
}

func NewRootTransferFactory_transferFunds_Params(s *capnp.Segment) (TransferFactory_transferFunds_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return TransferFactory_transferFunds_Params{st}, err
}

func ReadRootTransferFactory_transferFunds_Params(msg *capnp.Message) (TransferFactory_transferFunds_Params, error) {
	root, err := msg.RootPtr()
	return TransferFactory_transferFunds_Params{root.Struct()}, err
}

func (s TransferFactory_transferFunds_Params) String() string {
	str, _ := text.Marshal(0xe15103a27a4a442f, s.Struct)
	return str
}

func (s TransferFactory_transferFunds_Params) SourceAccount() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s TransferFactory_transferFunds_Params) HasSourceAccount() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s TransferFactory_transferFunds_Params) SourceAccountBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s TransferFactory_transferFunds_Params) SetSourceAccount(v string) error {
	return s.Struct.SetText(0, v)
}

func (s TransferFactory_transferFunds_Params) DestinationAccount() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s TransferFactory_transferFunds_Params) HasDestinationAccount() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s TransferFactory_transferFunds_Params) DestinationAccountBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s TransferFactory_transferFunds_Params) SetDestinationAccount(v string) error {
	return s.Struct.SetText(1, v)
}

func (s TransferFactory_transferFunds_Params) Amount() uint64 {
	return s.Struct.Uint64(0)
}

func (s TransferFactory_transferFunds_Params) SetAmount(v uint64) {
	s.Struct.SetUint64(0, v)
}

// TransferFactory_transferFunds_Params_List is a list of TransferFactory_transferFunds_Params.
type TransferFactory_transferFunds_Params_List struct{ capnp.List }

// NewTransferFactory_transferFunds_Params creates a new list of TransferFactory_transferFunds_Params.
func NewTransferFactory_transferFunds_Params_List(s *capnp.Segment, sz int32) (TransferFactory_transferFunds_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return TransferFactory_transferFunds_Params_List{l}, err
}

func (s TransferFactory_transferFunds_Params_List) At(i int) TransferFactory_transferFunds_Params {
	return TransferFactory_transferFunds_Params{s.List.Struct(i)}
}

func (s TransferFactory_transferFunds_Params_List) Set(i int, v TransferFactory_transferFunds_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s TransferFactory_transferFunds_Params_List) String() string {
	str, _ := text.MarshalList(0xe15103a27a4a442f, s.List)
	return str
}

// TransferFactory_transferFunds_Params_Promise is a wrapper for a TransferFactory_transferFunds_Params promised by a client call.
type TransferFactory_transferFunds_Params_Promise struct{ *capnp.Pipeline }

func (p TransferFactory_transferFunds_Params_Promise) Struct() (TransferFactory_transferFunds_Params, error) {
	s, err := p.Pipeline.Struct()
	return TransferFactory_transferFunds_Params{s}, err
}

type TransferFactory_transferFunds_Results struct{ capnp.Struct }

// TransferFactory_transferFunds_Results_TypeID is the unique identifier for the type TransferFactory_transferFunds_Results.
const TransferFactory_transferFunds_Results_TypeID = 0xf4cbce0b0580cbf6

func NewTransferFactory_transferFunds_Results(s *capnp.Segment) (TransferFactory_transferFunds_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return TransferFactory_transferFunds_Results{st}, err
}

func NewRootTransferFactory_transferFunds_Results(s *capnp.Segment) (TransferFactory_transferFunds_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return TransferFactory_transferFunds_Results{st}, err
}

func ReadRootTransferFactory_transferFunds_Results(msg *capnp.Message) (TransferFactory_transferFunds_Results, error) {
	root, err := msg.RootPtr()
	return TransferFactory_transferFunds_Results{root.Struct()}, err
}

func (s TransferFactory_transferFunds_Results) String() string {
	str, _ := text.Marshal(0xf4cbce0b0580cbf6, s.Struct)
	return str
}

func (s TransferFactory_transferFunds_Results) Record() (TransactionalRecord, error) {
	p, err := s.Struct.Ptr(0)
	return TransactionalRecord{Struct: p.Struct()}, err
}

func (s TransferFactory_transferFunds_Results) HasRecord() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s TransferFactory_transferFunds_Results) SetRecord(v TransactionalRecord) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRecord sets the record field to a newly
// allocated TransactionalRecord struct, preferring placement in s's segment.
func (s TransferFactory_transferFunds_Results) NewRecord() (TransactionalRecord, error) {
	ss, err := NewTransactionalRecord(s.Struct.Segment())
	if err != nil {
		return TransactionalRecord{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// TransferFactory_transferFunds_Results_List is a list of TransferFactory_transferFunds_Results.
type TransferFactory_transferFunds_Results_List struct{ capnp.List }

// NewTransferFactory_transferFunds_Results creates a new list of TransferFactory_transferFunds_Results.
func NewTransferFactory_transferFunds_Results_List(s *capnp.Segment, sz int32) (TransferFactory_transferFunds_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return TransferFactory_transferFunds_Results_List{l}, err
}

func (s TransferFactory_transferFunds_Results_List) At(i int) TransferFactory_transferFunds_Results {
	return TransferFactory_transferFunds_Results{s.List.Struct(i)}
}

func (s TransferFactory_transferFunds_Results_List) Set(i int, v TransferFactory_transferFunds_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s TransferFactory_transferFunds_Results_List) String() string {
	str, _ := text.MarshalList(0xf4cbce0b0580cbf6, s.List)
	return str
}

// TransferFactory_transferFunds_Results_Promise is a wrapper for a TransferFactory_transferFunds_Results promised by a client call.
type TransferFactory_transferFunds_Results_Promise struct{ *capnp.Pipeline }

func (p TransferFactory_transferFunds_Results_Promise) Struct() (TransferFactory_transferFunds_Results, error) {
	s, err := p.Pipeline.Struct()
	return TransferFactory_transferFunds_Results{s}, err
}

func (p TransferFactory_transferFunds_Results_Promise) Record() TransactionalRecord_Promise {
	return TransactionalRecord_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type TransactionalRecord struct{ capnp.Struct }

// TransactionalRecord_TypeID is the unique identifier for the type TransactionalRecord.
const TransactionalRecord_TypeID = 0xafbe625efd0fe5ae

func NewTransactionalRecord(s *capnp.Segment) (TransactionalRecord, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2})
	return TransactionalRecord{st}, err
}

func NewRootTransactionalRecord(s *capnp.Segment) (TransactionalRecord, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2})
	return TransactionalRecord{st}, err
}

func ReadRootTransactionalRecord(msg *capnp.Message) (TransactionalRecord, error) {
	root, err := msg.RootPtr()
	return TransactionalRecord{root.Struct()}, err
}

func (s TransactionalRecord) String() string {
	str, _ := text.Marshal(0xafbe625efd0fe5ae, s.Struct)
	return str
}

func (s TransactionalRecord) SourceAccount() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s TransactionalRecord) HasSourceAccount() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s TransactionalRecord) SourceAccountBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s TransactionalRecord) SetSourceAccount(v string) error {
	return s.Struct.SetText(0, v)
}

func (s TransactionalRecord) SourceBalance() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s TransactionalRecord) SetSourceBalance(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s TransactionalRecord) DestinationAccount() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s TransactionalRecord) HasDestinationAccount() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s TransactionalRecord) DestinationAccountBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s TransactionalRecord) SetDestinationAccount(v string) error {
	return s.Struct.SetText(1, v)
}

func (s TransactionalRecord) DestinationBalance() int64 {
	return int64(s.Struct.Uint64(8))
}

func (s TransactionalRecord) SetDestinationBalance(v int64) {
	s.Struct.SetUint64(8, uint64(v))
}

func (s TransactionalRecord) Amount() uint64 {
	return s.Struct.Uint64(16)
}

func (s TransactionalRecord) SetAmount(v uint64) {
	s.Struct.SetUint64(16, v)
}

// TransactionalRecord_List is a list of TransactionalRecord.
type TransactionalRecord_List struct{ capnp.List }

// NewTransactionalRecord creates a new list of TransactionalRecord.
func NewTransactionalRecord_List(s *capnp.Segment, sz int32) (TransactionalRecord_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2}, sz)
	return TransactionalRecord_List{l}, err
}

func (s TransactionalRecord_List) At(i int) TransactionalRecord {
	return TransactionalRecord{s.List.Struct(i)}
}

func (s TransactionalRecord_List) Set(i int, v TransactionalRecord) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s TransactionalRecord_List) String() string {
	str, _ := text.MarshalList(0xafbe625efd0fe5ae, s.List)
	return str
}

// TransactionalRecord_Promise is a wrapper for a TransactionalRecord promised by a client call.
type TransactionalRecord_Promise struct{ *capnp.Pipeline }

func (p TransactionalRecord_Promise) Struct() (TransactionalRecord, error) {
	s, err := p.Pipeline.Struct()
	return TransactionalRecord{s}, err
}

const schema_8e7192767ff40215 = "x\xda\x9c\x93Ak\x13Q\x10\xc7\xe7?o\xd7\x18\x8c" +
	"\xb4\x8f\xacGY\x11O\x82\x8d\xd2[=\xa4-\xb5\xa2" +
	" \xe4\x95^\x14\x15\x9f/[\x08$\xbb\xf1\xedF\xb4" +
	"X\xf4`\xc1\x8bR\x04\x0f-=\x88 (\x88\x05?" +
	"\x80\xd0\x93H\xc1\x83\xdf\xc0\x83\xdf\xa0x\x93\x95\x97v" +
	"\x93\\\x8c\xe0mv\xde\xcc\xfcg~\x7f\xf6\xfcI\xcc" +
	"\xf2\x05\xff\x0b\x13\xa9S\xfe\x91\xfc\xe3\xcf\x89\xdf\xb7\xef" +
	"~\xde!\x15B\xe4'x\xff\xf1\xfd\x97\xf7^\x90\xcf" +
	"%\xa2\xe9+\xd8BU\xc3\x85\xb7\x10\x82\x90\xdf\xf8\xde" +
	"\xee|zp\xf1+\xc9p\xa4\x9a0\xbd\xce\xab\xa8n" +
	"\xba\xae\xea+\xbe\\\xdduQ^[\xb8\xba\xfaF\xa8" +
	"\x1f\xa4j\x00\x1d\x0e}\xcf\xa7\x99P\xdd\xe5\x1dB\xfe" +
	"k\xef\x89\x7f\xec\xdb\xde>\xc9\x9a+\xe8KE\xe2\xac" +
	"+X\x13u:\x97wm\x92%i-\xf3\xad\x8e\xd3" +
	"\x95\xc8\xd6\xb2\xc3`\xca\xe8n\xdc\x9dYv\x9f\xdad" +
	"\xad$\xd6\xed\xa5\xc8$\xc26\x1b\x80\x0a\x84G\xe4\x81" +
	"H\xaeY\"\xf5H@=c\x00\x81[D\xae\xbb\xdc" +
	"S\x01\xb5\xc1\x90\x8c\x00L$\x9fo\x11\xa9\x0d\x01\xb5" +
	"\xcd\x90\x02\x01\x04\x91\xdct\xc9m\x01\xf5\x8e!=\x0e" +
	"\xe0\x11\xc9\xb73D\xea\xb5\x80\xfa\xc0\xc8\xd3\xa4gM" +
	"4g(4I/\xceP!F\x85\x8a\xfc\xbc\xa6\xb0" +
	"\xadc\x13\xc1'\x86O\xc8\x9bQ\x9a\xb5b\x9d\xa1\x95" +
	"\xc4s\xc6$=1\xd24\xfa8\xaf\xdb:\x16\xc3\xce" +
	"\xba\xee\xf4\x05\xca\xc4(\x13\x06h\xbcqhV\"\xbb" +
	"X\xd7&K\xecC\x87\xc5\x13\xfe\x88/(\xf0Ki" +
	"\x89e\xb9\x94\x17#(\\\xec\xc5\xcdt\x16\x0d\x0c\x85" +
	"J\xff\x12:\xd0\x99*\x9e\xfb#\xce4\xb4-\xe9N" +
	"\xaa*\x03G.9\xfa\x0b\x02\xaa\xc1\x90\x85%\xd7\x1c" +
	"\xe8\x86\x80\xba\xc9\x00\x1f8r\xddq^\x16Pw\xc6" +
	"p\x1e\xc7\xf3o\xc8\xfe\xef\x92\xa5(\x9d\xe8\xb5\xb3T" +
	"y\x83S\x8e\xbb\x0d\x8f\x0a\xa8\x80Q\xb7\x91Il\x13" +
	"\x93\xc3\x9f\x8a\x80I\xc2\x9f\x00\x00\x00\xff\xff\x98\x86\xf1" +
	"\xbd"

func init() {
	schemas.Register(schema_8e7192767ff40215,
		0xafbe625efd0fe5ae,
		0xc93b78b26d6cd25a,
		0xe15103a27a4a442f,
		0xf4cbce0b0580cbf6)
}
